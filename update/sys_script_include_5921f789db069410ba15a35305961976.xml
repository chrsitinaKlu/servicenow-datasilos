<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilos.RecordAddGroupsToWhiteListFromGroupByTypes</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RecordAddGroupsToWhiteListFromGroupByTypes</name>
        <script><![CDATA[function RecordAddGroupsToWhiteListFromGroupByTypes(record,strGroupSysId, aTypes)
{
	var Debug = x_snc_devtools.Debug;
	var RenderValue = x_snc_devtools.RenderValue;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var IsValidSysId = x_snc_devtools.IsValidSysId;
	
	strGroupSysId = GetStringValue(strGroupSysId);
	aTypes = GetArrayValue(aTypes);
	
	if (IsValidSysId(strGroupSysId))
	{
		RecordAddGroupToWhiteList(record,strGroupSysId);

		// Now add all fulfiller and supervisor groups of all silos of the assignment group
		var aUserSilos = GetSilosFromGroup(strGroupSysId);
		Debug('DataSilos: RecordAddGroupsToWhiteListFromGroupByTypes: GetSilosFromGroup: '+RenderValue(aUserSilos));

		var aGroupsToAdd = [];
		if ((aUserSilos.length > 0) && (aTypes.length > 0))
		{
			var grSilosToGroups = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
			var queryType = grSilosToGroups.addQuery('type','=',GetStringValue(aTypes[0]));
			for (var nIndexType = 1; nIndexType < aTypes.length; nIndexType++) 
			{
				queryType.addOrCondition('type','=',GetStringValue(aTypes[nIndexType]));
			}
													 
			var queryGroups = grSilosToGroups.addQuery('datasilo','=',aUserSilos[0]);
			for (var nIndexSilo = 1; nIndexSilo < aUserSilos.length; nIndexSilo++) 
			{
				queryGroups.addOrCondition('datasilo','=',aUserSilos[nIndexSilo]);
			}
			Debug('DataSilos: RecordAddGroupsToWhiteListFromGroupByTypes: grSilosToGroups.getEncodedQuery: '+grSilosToGroups.getEncodedQuery());
			grSilosToGroups.query();
			while (grSilosToGroups.next())
			{
				aGroupsToAdd.push(grSilosToGroups.getValue('group'));
			}
		}
		Debug('DataSilos: RecordAddGroupsToWhiteListFromGroupByTypes: aGroupsToAdd: '+RenderValue(aGroupsToAdd));

		// Apply the silo's groups to the record's white list
		for (var nIndexGroup = 0; nIndexGroup < aGroupsToAdd.length; nIndexGroup++)
		{
			RecordAddGroupToWhiteList(record,aGroupsToAdd[nIndexGroup]);
		}
	}	
	return true;

}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-07-15 13:24:03</sys_created_on>
        <sys_id>5921f789db069410ba15a35305961976</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>RecordAddGroupsToWhiteListFromGroupByTypes</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_5921f789db069410ba15a35305961976</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-07-15 13:40:18</sys_updated_on>
    </sys_script_include>
</record_update>
