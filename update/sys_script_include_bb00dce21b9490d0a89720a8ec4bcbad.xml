<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilos.RecordUpdate</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RecordUpdate</name>
        <script><![CDATA[function RecordUpdate(record)
{
	var Debug = x_snc_devtools.Debug;
	var RenderValue = x_snc_devtools.RenderValue;
	var ArrayUnique = x_snc_devtools.ArrayUnique;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var IsValidSysId = x_snc_devtools.IsValidSysId;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	
	if (IsValidRecord(record) == false)
	{
		Debug('DataSilos: RecordUpdate: record is undefined or null');
		return false;
	}
	
	var strClassName = record.getRecordClassName(); 
	Debug('DataSilos: RecordUpdate: '+strClassName+': '+record.sys_id/*+RenderValue(record)*/);
	
	if (IsClassNameSupported(strClassName))
	{
		
		// Add groups from the parent record
		RecordAddGroupsToWhiteListFromParentRecord(record);
		
		// Add white listed groups from related records
		RecordAddGroupsToWhiteListFromRelatedRecords(record);
		
		
		// Add the assignment_group and the associated supervisors
		var strAssignmentGroupSysId = GetStringValue(record.getValue('assignment_group'));
		if (IsValidSysId(strAssignmentGroupSysId))
		{
			RecordAddGroupToWhiteList(record,strAssignmentGroupSysId);
			
			// Add the corresponding supervisor group(s)
			var aSilos = GetSilosFromGroup(strAssignmentGroupSysId);
			var aGroupsToAdd = [];
			if (aSilos.length > 0)
			{
				var grSilosToGroups = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
				grSilosToGroups.addQuery('type','=','supervisor');
				var query = grSilosToGroups.addQuery('datasilo','=',aSilos[0]);
				for (var nIndexSilo = 1; nIndexSilo < aSilos.length; nIndexSilo++) 
				{
					query.addOrCondition('datasilo','=',aSilos[nIndexSilo]);
				}
				grSilosToGroups.query();
				while (grSilosToGroups.next())
				{
					aGroupsToAdd.push(grSilosToGroups.getValue('group'));
				}
			}
			for (var nIndexGroup = 0; nIndexGroup < aGroupsToAdd.length; nIndexGroup++)
			{
				RecordAddGroupToWhiteList(record,aGroupsToAdd[nIndexGroup]);
			}
		}
		
		// Apply white listed groups to parent record
		UpdateWhiteListOfParentRecord(record); 
		
		// Apply white listed groups to related records
		UpdateWhiteListOfRelatedRecords(record); 

		return true;
	}
	
	if (strClassName == 'sysapproval_approver')
	{
		return OnApproval(record);	
	}
	
	Debug('DataSilos: RecordUpdate: Unsupported class name: '+strClassName+'');

	return false;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-04-23 13:00:48</sys_created_on>
        <sys_id>bb00dce21b9490d0a89720a8ec4bcbad</sys_id>
        <sys_mod_count>41</sys_mod_count>
        <sys_name>RecordUpdate</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_bb00dce21b9490d0a89720a8ec4bcbad</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-07-07 12:05:05</sys_updated_on>
    </sys_script_include>
</record_update>
